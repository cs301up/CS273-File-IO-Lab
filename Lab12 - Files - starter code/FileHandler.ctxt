#BlueJ class context
comment0.target=FileHandler
comment0.text=\n\ FileHandler\ -\ performs\ a\ number\ operations\ on\ file\n\ \n\ A\ FileHandler\ object\ performs\ operations\ on\ files.\ After\ each\ operation\n\ the\ FileHandler\ keeps\ track\ of\ the\ result\ of\ the\ operations,\ which\ the\n\ caller\ may\ query\ by\ invoking\ the\ 'getMessage'\ operation\ on\ the\ object.\ The\n\ 'getMessage'\ method\ returns\ a\ String.\n\n\ A\ FileHandler\ object\ performs\ the\ following\ operations\:\n\ \ \ -\ createEmptyFile\ -\ creates\ an\ new\ (empty)\ file\n\ \ \ -\ deleteFile\ -\ deletes\ a\ file\n\ \ \ -\ listContents\:\ reads\ all\ the\ bytes\ in\ the\ file.\ The\ result\ of\ a\ 'lastMessage'\n\ \ \ \ \ after\ this\ operation\ is\ the\ String\ containing\ the\ contents\ of\ the\ file,\ where\n\ \ \ \ \ each\ byte\ in\ the\ file\ is\ treated\ as\ a\ char.\n\ \ \ -\ countBytes\ -\ counts\ the\ number\ of\ bytes\ in\ the\ file.\ The\ result\ of\ the\n\ \ \ \ \ 'lastMessage'\ will\ be\ a\ string\ that\ tells\ the\ number\ of\ bytes\ counted.\n\ \ \ -\ copyFile\ -\ copies\ the\ contents\ of\ one\ file\ to\ another.\ The\ 'lastMessage'\ string\n\ \ \ \ \ is\ an\ indication\ as\ to\ whether\ the\ copying\ was\ successfully\ done.\ *\ \ \ \n\ \ \ -\ appendString\ -\ appends\ a\ string\ to\ a\ text\ file.\n\ \ \ -\ copyFileInvertCase\ -\ copies\ the\ contents\ of\ a\ source\ file\ to\ a\ second\ file,\ except\ upper\n\ \ \ \ \ \ \ and\ lowercase\ letters\ are\ swapped.\n
comment1.params=
comment1.target=FileHandler()
comment1.text=\n\ FileHandler\ constructor\ -\ creates\ a\ new\ FileHandler\ object\n
comment2.params=
comment2.target=java.lang.String\ getMessage()
comment2.text=\n\ Gives\ the\ message\ that\ resulted\ from\ the\ most\ recent\ file\ operation\n\ @return\ The\ object's\ message.\n
comment3.params=fileName
comment3.target=void\ createEmptyFile(java.lang.String)
comment3.text=\n\ Creates\ a\ file\ with\ no\ bytes\ in\ it.\n\ \n\ The\ object's\ message\ is\ changed\ to\ reflect\ the\ method's\n\ status.\ If\ a\ file\ by\ that\ name\ already\ exists,\ it\ is\ deleted.\n\ \ \ \ \ \n\ @param\ fileName\ -\ the\ name\ of\ the\ file\ to\ be\ created.\n
comment4.params=fileName
comment4.target=void\ deleteFile(java.lang.String)
comment4.text=\n\ Deletes\ a\ file.\n\ \n\ The\ object's\ message\ is\ changed\ to\ reflect\ the\ method's\n\ status.\n\ \n\ @param\ fileName\ -\ the\ name\ of\ the\ file\ to\ be\ deleted.\n
comment5.params=fileName
comment5.target=void\ listContents(java.lang.String)
comment5.text=\n\ Set's\ this\ object's\ message\ to\ contents\ of\ a\ file.\n\ \n\ The\ object's\ message\ is\ changed.\ \ If\ the\ file-read\ was\ successful,\n\ then\ the\ message\ consists\ of\ the\ file's\ contents.\ \ Otherwise\ it\ consists\n\ of\ a\ message\ that\ the\ file\ was\ not\ successfully\ read.\n\ \n\ @param\ fileName\ -\ The\ name\ of\ the\ file\ whose\ contents\ are\ to\ be\ examined\n
comment6.params=fileName
comment6.target=int\ countBytes(java.lang.String)
comment6.text=\n\ Counts\ the\ number\ of\ bytes\ in\ a\ file\n\ \n\ The\ object's\ message\ is\ changed\ to\ reflect\ the\ method's\n\ status.\n\ \ \ \ \ \ \n\ @param\ fileName\ -\ The\ name\ of\ the\ file\ whose\ bytes\ are\ to\ be\ counted\n\ @return\ the\ number\ of\ bytes\ in\ the\ file,\ or\ -1\ if\ there\ was\ an\ error\ \n\ \ \ \ \ \ \ \ \ \ in\ opening\ and/or\ reading\ the\ file.\n
comment7.params=srcName\ dstName
comment7.target=void\ copyFile(java.lang.String,\ java.lang.String)
comment7.text=\n\ Copies\ the\ contents\ of\ a\ source\ file\ to\ a\ second\ file.\n\n\ The\ file\ whose\ name\ is\ given\ by\ 'outFileName'\ is\ created;\ the\ contents\n\ of\ the\ 'inFileName'\ file\ are\ copied\ into\ it.\ \ The\ object's\ message-\n\ string\ is\ changed\ to\ reflect\ the\ status\ of\ the\ operation.\ \ If\ a\ file\n\ already\ exists\ by\ that\ name,\ it\ is\ deleted.\n\n\ @param\ srcName\ -\ The\ name\ of\ the\ source\ file.\n\ @param\ dstName\ -\ The\ name\ of\ the\ new\ file\ to\ create\ and\ copy\ the\ contents\ of\ the\ source\ file\ to.\n
comment8.params=str\ fileName
comment8.target=void\ appendString(java.lang.String,\ java.lang.String)
comment8.text=\n\ Appends\ a\ string\ to\ a\ file.\n\n\ @param\ str\ -\ the\ string\ to\ append\n\ @param\ fileName\ -\ the\ name\ of\ the\ file\ that\ the\ string\ should\ be\ appended\ to.\n
comment9.params=srcName\ dstName
comment9.target=void\ copyFileInvertCase(java.lang.String,\ java.lang.String)
comment9.text=\n\ Copies\ the\ contents\ of\ a\ source\ file\ to\ a\ second\ file,\ except\ upper\n\ and\ lowercase\ letters\ are\ swapped.\n\n\ The\ file\ whose\ name\ is\ given\ by\ 'outFileName'\ is\ created;\ the\ contents\n\ \ \ \ \ \ *\ of\ the\ 'inFileName'\ file\ are\ copied\ into\ it.\ \ The\ object's\ message-\n\ \ \ \ \ \ *\ string\ is\ changed\ to\ reflect\ the\ status\ of\ the\ operation.\ \ If\ a\ file\n\ \ \ \ \ \ *\ already\ exists\ by\ that\ name,\ it\ is\ deleted.\n\n\ @param\ srcName\ -\ The\ name\ of\ the\ source\ file.\n\ @param\ dstName\ -\ The\ name\ of\ the\ new\ file\ to\ create\ and\ copy\ the\ contents\ of\ the\ source\ file\ to.\n
numComments=10
